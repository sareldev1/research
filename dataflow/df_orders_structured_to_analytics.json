{
	"name": "df_orders_structured_to_analytics",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_structured_orders",
						"type": "DatasetReference"
					},
					"name": "srcStructuresOrders"
				},
				{
					"dataset": {
						"referenceName": "ds_cleansed_products",
						"type": "DatasetReference"
					},
					"name": "srcCleansedProduct"
				},
				{
					"dataset": {
						"referenceName": "ds_structured_stores",
						"type": "DatasetReference"
					},
					"name": "srcStructuredStores"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_analytics_products_orders_monthly",
						"type": "DatasetReference"
					},
					"name": "sinkProductOrdersMonthly"
				},
				{
					"dataset": {
						"referenceName": "ds_analytics_stores_orders_monthly",
						"type": "DatasetReference"
					},
					"name": "sinkStoresOrdersMonthly"
				}
			],
			"transformations": [
				{
					"name": "derivedAddMonthYear"
				},
				{
					"name": "aggProductsOrdersMonthly"
				},
				{
					"name": "filterRemoveCancelled"
				},
				{
					"name": "joinOrdersProducts"
				},
				{
					"name": "joinStoresOrders"
				},
				{
					"name": "aggStoresOrders"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ORDER_ID as integer,",
				"          ORDER_DATE as date,",
				"          CUSTOMER_ID as integer,",
				"          ORDER_STATUS as string,",
				"          STORE_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          QUANTITY as integer,",
				"          SUBTOTAL as double,",
				"          UPDATE_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> srcStructuresOrders",
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          PRODUCT_NAME as string,",
				"          UNIT_PRICE as double,",
				"          UPDATED_TIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> srcCleansedProduct",
				"source(output(",
				"          STORE_ID as integer,",
				"          STORE_NAME as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          UPDATED_TIMESTAMPS as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> srcStructuredStores",
				"srcStructuresOrders derive(MONTH_YEAR = toString(ORDER_DATE,'MM-yyyy')) ~> derivedAddMonthYear",
				"joinOrdersProducts aggregate(groupBy(PRODUCT_NAME,",
				"          MONTH_YEAR,",
				"          ORDER_STATUS),",
				"     TOTAL_AMOUNT = round(sum(SUBTOTAL),2)) ~> aggProductsOrdersMonthly",
				"derivedAddMonthYear filter(ORDER_STATUS != 'CANCELLED') ~> filterRemoveCancelled",
				"srcCleansedProduct, filterRemoveCancelled join(srcStructuresOrders@PRODUCT_ID == srcCleansedProduct@PRODUCT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinOrdersProducts",
				"srcStructuredStores, filterRemoveCancelled join(srcStructuredStores@STORE_ID == srcStructuresOrders@STORE_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinStoresOrders",
				"joinStoresOrders aggregate(groupBy(STORE_NAME,",
				"          LATITUDE,",
				"          LONGITUDE,",
				"          ORDER_STATUS,",
				"          MONTH_YEAR),",
				"     TOTAL_AMOUNT = round(sum(SUBTOTAL),2)) ~> aggStoresOrders",
				"aggProductsOrdersMonthly sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Products_Orders_Monthly.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkProductOrdersMonthly",
				"aggStoresOrders sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Stores_Orders_Monthly.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sinkStoresOrdersMonthly"
			]
		}
	}
}